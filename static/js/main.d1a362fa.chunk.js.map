{"version":3,"sources":["BlackBoxSamples/MintBackground.GIF","BlackBoxSamples/logo.png","Contract.js","MintScreen.js","index.js"],"names":["contractAddr","contract","Web3","eth","Contract","accessPass","abi","SideScreen","useState","mintAmount","setMintAmount","wallet","setWallet","web3","setWeb3","etherscanLink","providerOptions","injected","package","walletconnect","WalletConnectProvider","network","options","infuraId","web3Modal","Web3Modal","cacheProvider","a","connect","provider","getAccounts","then","addr","toLocaleLowerCase","console","log","mintable_price","toString","tx","from","to","value","ethers","utils","parseEther","gas","data","methods","mintAccessPass","encodeABI","sendTransaction","darkTheme","createTheme","palette","mode","typography","fontFamily","join","Copyright","props","Typography","variant","color","align","Link","href","Date","getFullYear","WalletAddress","link","concat","ContractAddress","Web3Button","styled","Button","fontSize","padding","border","lineHeight","backgroundColor","borderColor","boxShadow","ThemeProvider","theme","Grid","container","component","sx","height","CssBaseline","item","xs","sm","md","lg","display","flexDirection","alignItems","backgroundImage","MintBackground","backgroundRepeat","backgroundSize","backgroundPosition","Box","mt","marginTop","mx","width","alt","src","logo","Slider","onChangeCommitted","events","event","preventDefault","handleSlider","defaultValue","step","marks","label","min","max","mb","fullWidth","onClick","justifyContent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1a362fa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/MintBackground.00f211c7.GIF\";","export default __webpack_public_path__ + \"static/media/logo.edf503f5.png\";","import Web3 from \"web3\";\r\nimport accessPass from \"./contracts/BlackBoxAccessPass.json\"\r\n\r\n\r\nconst contractAddr = \"0xe7ca2cD6b0247D32f6d5aE1FD09Eb62539E010C4\";\r\nconst web3 = new Web3(\"https://mainnet.infura.io/v3/bad8cc770bef49dc88683bf2290205c8\");\r\nlet contract = new web3.eth.Contract(accessPass.abi, contractAddr);\r\n\r\nexport { \r\n    contractAddr, \r\n    contract\r\n};","import { ethers } from 'ethers';\r\nimport { useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Link from '@mui/material/Link';\r\nimport Slider from '@mui/material/Slider';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\r\nimport Web3 from \"web3\";\r\nimport Web3Modal from \"web3modal\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\n\r\nimport MintBackground from './BlackBoxSamples/MintBackground.GIF'\r\nimport logo from './BlackBoxSamples/logo.png'\r\nimport { contractAddr, contract } from './Contract';\r\n\r\n\r\nfunction SideScreen() {\r\n\r\n    const [mintAmount, setMintAmount] = useState(1);\r\n    const [wallet, setWallet] = useState();\r\n    const [web3, setWeb3] = useState();\r\n\r\n\r\n    const etherscanLink = \"https://etherscan.io/address/\";\r\n\r\n    const providerOptions = {\r\n        injected: {\r\n            package: null\r\n        },\r\n        walletconnect: {\r\n            package: WalletConnectProvider,\r\n            network: \"ethereum\",\r\n            options: {\r\n                infuraId: \"bad8cc770bef49dc88683bf2290205c8\" // required\r\n            }\r\n        }\r\n    };\r\n\r\n    const web3Modal = new Web3Modal({\r\n        network: \"mainnet\",\r\n        cacheProvider: true,\r\n        providerOptions\r\n    });\r\n\r\n    async function connect() {\r\n        try {\r\n            let provider;\r\n            provider = await web3Modal.connect();\r\n            let web3 = new Web3(provider);\r\n            setWeb3(web3);\r\n            web3.eth.getAccounts().then(async (addr) => {\r\n                setWallet(addr[0].toLocaleLowerCase());\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n            return;\r\n        }\r\n    }\r\n\r\n    async function mint() {\r\n        const price = 1.95 * mintAmount;\r\n        const mintable_price = price.toString();\r\n\r\n        const tx = {\r\n            from: wallet,\r\n            to: contractAddr,\r\n            value: ethers.utils.parseEther(mintable_price)[\"_hex\"],\r\n            gas: 210000,\r\n            data: contract.methods.mintAccessPass(mintAmount).encodeABI(),\r\n        };\r\n\r\n        const createTransaction = await web3.eth.sendTransaction(tx);\r\n    }\r\n\r\n    function handleSlider(event, value) {\r\n        event.preventDefault();\r\n        setMintAmount(value);\r\n    }\r\n\r\n    const darkTheme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n        },\r\n        typography: {\r\n            fontFamily: [\r\n                'Open Sans',\r\n                'Roboto'\r\n            ].join(','),\r\n        }\r\n    });\r\n\r\n    function Copyright(props) {\r\n        return (\r\n            <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n                {'Copyright Â© '}\r\n                <Link color=\"inherit\" href=\"https://www.blackboxcollective.io/\">\r\n                    Black Box Collective\r\n                </Link>{' '}\r\n                {new Date().getFullYear()}\r\n                {'.'}\r\n            </Typography>\r\n        );\r\n    }\r\n\r\n    function WalletAddress() {\r\n        const link = etherscanLink.concat(wallet)\r\n        return (\r\n            <Typography align='center'>\r\n                <Link color=\"inherit\" href={link}>\r\n                    {wallet}\r\n                </Link>\r\n            </Typography>\r\n        )\r\n    }\r\n\r\n    function ContractAddress() {\r\n        const link = etherscanLink.concat(contractAddr)\r\n        return (\r\n            <Typography>\r\n                <Link color=\"inherit\" href={link}>\r\n                    {contractAddr}\r\n                </Link>\r\n            </Typography>\r\n        )\r\n    }\r\n\r\n    const marks = [\r\n        {\r\n            value: 1,\r\n            label: '1',\r\n        },\r\n        {\r\n            value: 2,\r\n            label: '2',\r\n        }\r\n    ];\r\n\r\n    const Web3Button = styled(Button)({\r\n        fontSize: 16,\r\n        padding: '6px 12px',\r\n        border: '1px solid',\r\n        lineHeight: 1.5,\r\n        backgroundColor: 'white',\r\n        fontFamily: [\r\n            'Roboto',\r\n        ].join(','),\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n            borderColor: 'rgba(255, 255, 255, 0.08)',\r\n            boxShadow: 'rgba(255, 255, 255, 0.16)',\r\n        },\r\n        '&:active': {\r\n            boxShadow: '#fff',\r\n            backgroundColor: '#fff',\r\n            borderColor: '#fff',\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <ThemeProvider theme={darkTheme} >\r\n            <Grid container component=\"main\" sx={{ height: '100vh' }}>\r\n                <CssBaseline />\r\n                <Grid item xs={12} sm={12} md={12} lg={12} sx={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    backgroundImage: `url(${MintBackground})`,\r\n                    backgroundRepeat: 'no-repeat',\r\n                    backgroundSize: 'cover',\r\n                    backgroundPosition: 'center',\r\n                }}>\r\n                    <Box\r\n                        sx={{\r\n                            mt: 1,\r\n                            marginTop: 12,\r\n                            mx: 5,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <Box\r\n                            component=\"img\"\r\n                            sx={{\r\n                                height: 250,\r\n                                width:  375,\r\n                            }}\r\n                            alt=\"The house from the offer.\"\r\n                            src={logo}\r\n                        />\r\n                        <Slider\r\n                            onChangeCommitted={(events, value) => handleSlider(events, value)}\r\n                            aria-label=\"Mint Amount\"\r\n                            defaultValue={1}\r\n                            step={1}\r\n                            marks={marks}\r\n                            min={1}\r\n                            max={2}\r\n                            sx={{\r\n                                color: 'text.primary',\r\n                                mb: 4\r\n                            }}\r\n                        />\r\n                        {wallet &&\r\n                            <Web3Button\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                onClick={mint}\r\n                            >\r\n                                Mint\r\n                            </Web3Button>\r\n                        } {!wallet &&\r\n                            <Web3Button\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                onClick={() => connect()}\r\n                            >\r\n                                Connect\r\n                            </Web3Button>\r\n                        }\r\n                        <Typography\r\n                            component=\"h4\"\r\n                            variant=\"Subtitle\"\r\n                            color=\"White\"\r\n                            align=\"center\"\r\n                            display='flex'\r\n                            justifyContent='center'\r\n                            sx={{\r\n                                mt: 2\r\n                            }}\r\n                        >\r\n                            Connected Wallet:\r\n                        </Typography>\r\n                        <WalletAddress />\r\n                        <Typography\r\n                            component=\"h4\"\r\n                            variant=\"Subtitle\"\r\n                            color=\"White\"\r\n                            align=\"center\"\r\n                            display='flex'\r\n                            justifyContent='center'\r\n                            sx={{\r\n                                mt: 1\r\n                            }}\r\n                        >\r\n                            Contract Address:\r\n                        </Typography>\r\n                        <ContractAddress />\r\n                        <Copyright sx={{ mt: 1 }} />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default SideScreen;","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport HookApp from './MintScreen'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <HookApp />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n  \r\n\r\n"],"sourceRoot":""}