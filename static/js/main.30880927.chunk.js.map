{"version":3,"sources":["AccessPassSamples/MintBackground.GIF","Contract.js","FullScreenHook.js","index.js"],"names":["contractAddr","contract","Web3","eth","Contract","accessPass","abi","FullScreenHook","useState","mintAmount","setMintAmount","wallet","setWallet","web3","setWeb3","providerOptions","injected","package","walletconnect","WalletConnectProvider","network","options","infuraId","web3Modal","Web3Modal","cacheProvider","a","connect","provider","getAccounts","then","addr","console","log","mintable_price","toString","tx","from","to","value","ethers","utils","parseEther","data","methods","mintAccessPass","encodeABI","sendTransaction","darkTheme","createTheme","palette","mode","typography","fontFamily","join","Copyright","props","Typography","variant","color","align","Link","href","Date","getFullYear","Web3Button","styled","Button","fontSize","padding","border","lineHeight","backgroundColor","borderColor","boxShadow","ThemeProvider","theme","Grid","container","component","sx","height","backgroundImage","MintBackground","backgroundRepeat","backgroundSize","backgroundPosition","CssBaseline","item","direction","alignItems","justify","p","m","display","Container","width","marginTop","flexDirection","borderRadius","opacity","Box","noValidate","mt","fontWeight","justifyContent","Slider","onChangeCommitted","events","event","preventDefault","handleSlider","defaultValue","valueLabelDisplay","step","marks","min","max","fullWidth","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30880927.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/MintBackground.00f211c7.GIF\";","import Web3 from \"web3\";\r\nimport accessPass from \"./contracts/BlackBoxAccessPass.json\"\r\n\r\n\r\nconst contractAddr = \"0xe7ca2cD6b0247D32f6d5aE1FD09Eb62539E010C4\";\r\nconst web3 = new Web3(\"https://mainnet.infura.io/v3/bad8cc770bef49dc88683bf2290205c8\");\r\nlet contract = new web3.eth.Contract(accessPass.abi, contractAddr);\r\n\r\nexport { \r\n    contractAddr, \r\n    contract\r\n};","import { ethers } from 'ethers';\r\nimport { useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Link from '@mui/material/Link';\r\nimport Slider from '@mui/material/Slider';\r\nimport Button from '@mui/material/Button';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\r\nimport Web3 from \"web3\";\r\nimport Web3Modal from \"web3modal\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\n\r\nimport MintBackground from './AccessPassSamples/MintBackground.GIF'\r\nimport { contractAddr, contract } from './Contract';\r\n\r\nfunction FullScreenHook() {\r\n\r\n    const [mintAmount, setMintAmount] = useState(1);\r\n    const [wallet, setWallet] = useState();\r\n    const [web3, setWeb3] = useState();\r\n    // const whitelist = WhitelistDictionary();\r\n\r\n    const providerOptions = {\r\n        injected: {\r\n            package: null\r\n        },\r\n        walletconnect: {\r\n            package: WalletConnectProvider,\r\n            network: \"ethereum\",\r\n            options: {\r\n                infuraId: \"bad8cc770bef49dc88683bf2290205c8\" // required\r\n            }\r\n        }\r\n    };\r\n\r\n    const web3Modal = new Web3Modal({\r\n        network: \"mainnet\",\r\n        cacheProvider: true,\r\n        providerOptions\r\n    });\r\n\r\n    async function connect() {\r\n        try {\r\n            let provider;\r\n            provider = await web3Modal.connect();\r\n            let web3 = new Web3(provider);\r\n            setWeb3(web3);\r\n            web3.eth.getAccounts().then(async (addr) => {\r\n                setWallet(addr[0]);\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n            return;\r\n        }\r\n    }\r\n\r\n    async function mint() {\r\n        const price = 1.95 * mintAmount;\r\n        const mintable_price = price.toString();\r\n\r\n        const tx = {\r\n            from: wallet,\r\n            to: contractAddr,\r\n            value: ethers.utils.parseEther(mintable_price)[\"_hex\"],\r\n            data: contract.methods.mintAccessPass(mintAmount).encodeABI(),\r\n        };\r\n\r\n        const createTransaction = await web3.eth.sendTransaction(tx);\r\n    }\r\n\r\n    function handleSlider(event, value) {\r\n        event.preventDefault();\r\n        setMintAmount(value);\r\n    }\r\n\r\n    const darkTheme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n        },\r\n        typography: {\r\n            fontFamily: [\r\n                'Open Sans',\r\n                'Roboto'\r\n            ].join(','),\r\n        }\r\n    });\r\n\r\n    function Copyright(props) {\r\n        return (\r\n            <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n                {'Copyright Â© '}\r\n                <Link color=\"inherit\" href=\"https://www.blackboxcollective.io/\">\r\n                    Black Box Collective\r\n                </Link>{' '}\r\n                {new Date().getFullYear()}\r\n                {'.'}\r\n            </Typography>\r\n        );\r\n    }\r\n\r\n    const Web3Button = styled(Button)({\r\n        fontSize: 16,\r\n        padding: '6px 12px',\r\n        border: '1px solid',\r\n        lineHeight: 1.5,\r\n        backgroundColor: 'grey',\r\n        fontFamily: [\r\n            'Roboto',\r\n        ].join(','),\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n            borderColor: 'rgba(255, 255, 255, 0.08)',\r\n            boxShadow: 'rgba(255, 255, 255, 0.16)',\r\n        },\r\n        '&:active': {\r\n            boxShadow: '#fff',\r\n            backgroundColor: '#fff',\r\n            borderColor: '#fff',\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <ThemeProvider theme={darkTheme}>\r\n            <Grid\r\n                container\r\n                component=\"main\"\r\n                sx={{\r\n                    height: '100vh',\r\n                    backgroundImage: `url(${MintBackground})`,\r\n                    backgroundRepeat: 'no-repeat',\r\n                    backgroundColor: 'Transparent',\r\n                    backgroundSize: 'cover',\r\n                    backgroundPosition: 'center'\r\n                }}>\r\n                <CssBaseline />\r\n                <Grid\r\n                    item\r\n                    container\r\n                    direction=\"column\"\r\n                    alignItems=\"flex-end\"\r\n                    justify=\"flex-start\"\r\n                    sx={{\r\n                        p: 4,\r\n                        m: -2\r\n                    }}\r\n                >\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n                    container\r\n                    direction=\"column\"\r\n                    display=\"flex\"\r\n                    justify=\"center\"\r\n                >\r\n                    <Container\r\n                        sx={{\r\n                            width: 500,\r\n                            height: 280,\r\n                            backgroundColor: '#121212',\r\n                            marginTop: -10,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center',\r\n                            borderRadius: 8,\r\n                            opacity: [1, 1, .92],\r\n                        }}\r\n                    >\r\n                        <Box\r\n                            component=\"form\"\r\n                            noValidate\r\n                            sx={{\r\n                                mt: 1,\r\n                            }}>\r\n                            <Typography\r\n                                component=\"h1\"\r\n                                variant=\"Title\"\r\n                                fontWeight=\"fontWeightBold\"\r\n                                color=\"White\"\r\n                                align=\"center\"\r\n                                display='flex'\r\n                                justifyContent='center'\r\n                            >\r\n                                BLACK BOX COLLECTIVE\r\n                            </Typography>\r\n                            <Slider\r\n                                onChangeCommitted={(events, value) => handleSlider(events, value)}\r\n                                aria-label=\"Mint Amount\"\r\n                                defaultValue={1}\r\n                                valueLabelDisplay=\"auto\"\r\n                                step={1}\r\n                                marks\r\n                                min={1}\r\n                                max={2}\r\n                                sx={{\r\n                                    color: 'text.primary'\r\n                                }}\r\n                            />\r\n                            {wallet &&\r\n                                <Web3Button\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    onClick={mint}\r\n                                >\r\n                                    Mint\r\n                                </Web3Button>\r\n                            } {!wallet &&\r\n                                <Web3Button\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    onClick={() => connect()}\r\n                                >\r\n                                    Connect\r\n                                </Web3Button>\r\n                            }\r\n                            <Typography\r\n                                component=\"h4\"\r\n                                variant=\"Subtitle\"\r\n                                color=\"White\"\r\n                                align=\"center\"\r\n                                display='flex'\r\n                                justifyContent='center'\r\n                                sx={{\r\n                                    m: 1\r\n                                }}\r\n                            >\r\n                                Connected Wallet: {wallet}\r\n                            </Typography>\r\n                            <Typography\r\n                                component=\"h4\"\r\n                                variant=\"Subtitle\"\r\n                                color=\"White\"\r\n                                align=\"center\"\r\n                                display='flex'\r\n                                justifyContent='center'\r\n                                sx={{\r\n                                    m: 1\r\n                                }}\r\n                            >\r\n                                Contract Address: {contractAddr}\r\n                            </Typography>\r\n                            <Copyright sx={{ mt: 1 }} />\r\n                        </Box>\r\n                    </Container>\r\n                </Grid>\r\n            </Grid>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default FullScreenHook;","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport HookApp from './FullScreenHook'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <HookApp />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n  \r\n\r\n"],"sourceRoot":""}